// Generated from ./grammar/TimingBlock.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class TimingBlockLexer extends Lexer {
	public static readonly TIMIINGS = 1;
	public static readonly WAVEFORM_TABLES = 2;
	public static readonly WAVEFORM_TABLE = 3;
	public static readonly SIGNAL = 4;
	public static readonly BREAK = 5;
	public static readonly USED = 6;
	public static readonly UNUSED = 7;
	public static readonly MAP = 8;
	public static readonly EQUATION_SETS = 9;
	public static readonly EQUATION_SET = 10;
	public static readonly EDGE_NAME = 11;
	public static readonly VAR_TYPE = 12;
	public static readonly PERIOD = 13;
	public static readonly SPEC_VARS = 14;
	public static readonly TIMING_SETS = 15;
	public static readonly TIMING_SET = 16;
	public static readonly SPECIFICATION_SETS = 17;
	public static readonly SPECIFICATION_SET = 18;
	public static readonly PORTS = 19;
	public static readonly XMODEValue = 20;
	public static readonly SALSH = 21;
	public static readonly L_BRACE = 22;
	public static readonly R_BRACE = 23;
	public static readonly L_BRACK = 24;
	public static readonly R_BRACK = 25;
	public static readonly L_PAR = 26;
	public static readonly R_PAR = 27;
	public static readonly SEMICOLON = 28;
	public static readonly EQUAL = 29;
	public static readonly COLON = 30;
	public static readonly ADD = 31;
	public static readonly SUB = 32;
	public static readonly MUL = 33;
	public static readonly DIV = 34;
	public static readonly ARROW = 35;
	public static readonly COMMA = 36;
	public static readonly WS = 37;
	public static readonly LINE_COMMENT = 38;
	public static readonly BLOCK_COMMENT = 39;
	public static readonly IDENTIFIER = 40;
	public static readonly INT = 41;
	public static readonly DOUBLE = 42;
	public static readonly EXP = 43;
	public static readonly UNIT = 44;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'Timings'", 
                                                            "'WaveformTables'", 
                                                            "'WaveformTable'", 
                                                            "'Signal'", 
                                                            "'Break'", "'Used'", 
                                                            "'Unused'", 
                                                            "'Map'", "'EquationSets'", 
                                                            "'EquationSet'", 
                                                            null, null, 
                                                            "'Period'", 
                                                            "'SpecVars'", 
                                                            "'TimingSets'", 
                                                            "'TimingSet'", 
                                                            "'SpecificationSets'", 
                                                            "'SpecificationSet'", 
                                                            "'Ports'", null, 
                                                            "'//'", "'{'", 
                                                            "'}'", "'['", 
                                                            "']'", "'('", 
                                                            "')'", "';'", 
                                                            "'='", "':'", 
                                                            "'+'", "'-'", 
                                                            "'*'", "'/'", 
                                                            "'=>'", "','" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "TIMIINGS", 
                                                             "WAVEFORM_TABLES", 
                                                             "WAVEFORM_TABLE", 
                                                             "SIGNAL", "BREAK", 
                                                             "USED", "UNUSED", 
                                                             "MAP", "EQUATION_SETS", 
                                                             "EQUATION_SET", 
                                                             "EDGE_NAME", 
                                                             "VAR_TYPE", 
                                                             "PERIOD", "SPEC_VARS", 
                                                             "TIMING_SETS", 
                                                             "TIMING_SET", 
                                                             "SPECIFICATION_SETS", 
                                                             "SPECIFICATION_SET", 
                                                             "PORTS", "XMODEValue", 
                                                             "SALSH", "L_BRACE", 
                                                             "R_BRACE", 
                                                             "L_BRACK", 
                                                             "R_BRACK", 
                                                             "L_PAR", "R_PAR", 
                                                             "SEMICOLON", 
                                                             "EQUAL", "COLON", 
                                                             "ADD", "SUB", 
                                                             "MUL", "DIV", 
                                                             "ARROW", "COMMA", 
                                                             "WS", "LINE_COMMENT", 
                                                             "BLOCK_COMMENT", 
                                                             "IDENTIFIER", 
                                                             "INT", "DOUBLE", 
                                                             "EXP", "UNIT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"TIMIINGS", "WAVEFORM_TABLES", "WAVEFORM_TABLE", "SIGNAL", "BREAK", "USED", 
		"UNUSED", "MAP", "EQUATION_SETS", "EQUATION_SET", "EDGE_NAME", "VAR_TYPE", 
		"PERIOD", "SPEC_VARS", "TIMING_SETS", "TIMING_SET", "SPECIFICATION_SETS", 
		"SPECIFICATION_SET", "PORTS", "XMODEValue", "SALSH", "L_BRACE", "R_BRACE", 
		"L_BRACK", "R_BRACK", "L_PAR", "R_PAR", "SEMICOLON", "EQUAL", "COLON", 
		"ADD", "SUB", "MUL", "DIV", "ARROW", "COMMA", "WS", "LINE_COMMENT", "BLOCK_COMMENT", 
		"IDENTIFIER", "INT", "DOUBLE", "EXP", "UNIT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, TimingBlockLexer._ATN, TimingBlockLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "TimingBlock.g4"; }

	public get literalNames(): (string | null)[] { return TimingBlockLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return TimingBlockLexer.symbolicNames; }
	public get ruleNames(): string[] { return TimingBlockLexer.ruleNames; }

	public get serializedATN(): number[] { return TimingBlockLexer._serializedATN; }

	public get channelNames(): string[] { return TimingBlockLexer.channelNames; }

	public get modeNames(): string[] { return TimingBlockLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,44,647,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,1,0,1,0,1,0,1,0,
	1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
	1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
	1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
	1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
	1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
	10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,
	197,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,436,8,11,1,12,1,12,1,12,1,12,1,
	12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
	1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,
	15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
	1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
	17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,
	1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,
	19,1,19,1,19,3,19,532,8,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,
	1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,
	31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,36,4,36,569,8,36,
	11,36,12,36,570,1,36,1,36,1,37,1,37,5,37,577,8,37,10,37,12,37,580,9,37,
	1,37,3,37,583,8,37,1,37,1,37,3,37,587,8,37,1,37,1,37,1,38,1,38,1,38,1,38,
	5,38,595,8,38,10,38,12,38,598,9,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,5,
	39,607,8,39,10,39,12,39,610,9,39,1,40,4,40,613,8,40,11,40,12,40,614,1,41,
	1,41,1,41,1,41,3,41,621,8,41,1,41,1,41,1,41,3,41,626,8,41,1,41,1,41,3,41,
	630,8,41,3,41,632,8,41,1,42,1,42,3,42,636,8,42,1,42,1,42,1,43,3,43,641,
	8,43,1,43,1,43,1,43,3,43,646,8,43,1,596,0,44,1,1,3,2,5,3,7,4,9,5,11,6,13,
	7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
	39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
	63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
	87,44,1,0,9,3,0,9,10,12,13,32,32,2,0,10,10,13,13,4,0,48,57,64,90,95,95,
	97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,69,69,101,101,2,0,43,
	43,45,45,9,0,71,71,77,77,84,84,97,97,102,102,107,107,109,110,112,112,117,
	117,6,0,65,65,67,67,70,70,83,83,86,86,115,115,704,0,1,1,0,0,0,0,3,1,0,0,
	0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
	0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
	0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
	0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
	0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
	0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
	0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,
	0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,1,89,1,0,0,0,3,97,1,0,0,0,
	5,112,1,0,0,0,7,126,1,0,0,0,9,133,1,0,0,0,11,139,1,0,0,0,13,144,1,0,0,0,
	15,151,1,0,0,0,17,155,1,0,0,0,19,168,1,0,0,0,21,196,1,0,0,0,23,435,1,0,
	0,0,25,437,1,0,0,0,27,444,1,0,0,0,29,453,1,0,0,0,31,464,1,0,0,0,33,474,
	1,0,0,0,35,492,1,0,0,0,37,509,1,0,0,0,39,531,1,0,0,0,41,533,1,0,0,0,43,
	536,1,0,0,0,45,538,1,0,0,0,47,540,1,0,0,0,49,542,1,0,0,0,51,544,1,0,0,0,
	53,546,1,0,0,0,55,548,1,0,0,0,57,550,1,0,0,0,59,552,1,0,0,0,61,554,1,0,
	0,0,63,556,1,0,0,0,65,558,1,0,0,0,67,560,1,0,0,0,69,562,1,0,0,0,71,565,
	1,0,0,0,73,568,1,0,0,0,75,574,1,0,0,0,77,590,1,0,0,0,79,604,1,0,0,0,81,
	612,1,0,0,0,83,631,1,0,0,0,85,633,1,0,0,0,87,640,1,0,0,0,89,90,5,84,0,0,
	90,91,5,105,0,0,91,92,5,109,0,0,92,93,5,105,0,0,93,94,5,110,0,0,94,95,5,
	103,0,0,95,96,5,115,0,0,96,2,1,0,0,0,97,98,5,87,0,0,98,99,5,97,0,0,99,100,
	5,118,0,0,100,101,5,101,0,0,101,102,5,102,0,0,102,103,5,111,0,0,103,104,
	5,114,0,0,104,105,5,109,0,0,105,106,5,84,0,0,106,107,5,97,0,0,107,108,5,
	98,0,0,108,109,5,108,0,0,109,110,5,101,0,0,110,111,5,115,0,0,111,4,1,0,
	0,0,112,113,5,87,0,0,113,114,5,97,0,0,114,115,5,118,0,0,115,116,5,101,0,
	0,116,117,5,102,0,0,117,118,5,111,0,0,118,119,5,114,0,0,119,120,5,109,0,
	0,120,121,5,84,0,0,121,122,5,97,0,0,122,123,5,98,0,0,123,124,5,108,0,0,
	124,125,5,101,0,0,125,6,1,0,0,0,126,127,5,83,0,0,127,128,5,105,0,0,128,
	129,5,103,0,0,129,130,5,110,0,0,130,131,5,97,0,0,131,132,5,108,0,0,132,
	8,1,0,0,0,133,134,5,66,0,0,134,135,5,114,0,0,135,136,5,101,0,0,136,137,
	5,97,0,0,137,138,5,107,0,0,138,10,1,0,0,0,139,140,5,85,0,0,140,141,5,115,
	0,0,141,142,5,101,0,0,142,143,5,100,0,0,143,12,1,0,0,0,144,145,5,85,0,0,
	145,146,5,110,0,0,146,147,5,117,0,0,147,148,5,115,0,0,148,149,5,101,0,0,
	149,150,5,100,0,0,150,14,1,0,0,0,151,152,5,77,0,0,152,153,5,97,0,0,153,
	154,5,112,0,0,154,16,1,0,0,0,155,156,5,69,0,0,156,157,5,113,0,0,157,158,
	5,117,0,0,158,159,5,97,0,0,159,160,5,116,0,0,160,161,5,105,0,0,161,162,
	5,111,0,0,162,163,5,110,0,0,163,164,5,83,0,0,164,165,5,101,0,0,165,166,
	5,116,0,0,166,167,5,115,0,0,167,18,1,0,0,0,168,169,5,69,0,0,169,170,5,113,
	0,0,170,171,5,117,0,0,171,172,5,97,0,0,172,173,5,116,0,0,173,174,5,105,
	0,0,174,175,5,111,0,0,175,176,5,110,0,0,176,177,5,83,0,0,177,178,5,101,
	0,0,178,179,5,116,0,0,179,20,1,0,0,0,180,181,5,100,0,0,181,197,5,49,0,0,
	182,183,5,100,0,0,183,197,5,50,0,0,184,185,5,100,0,0,185,197,5,51,0,0,186,
	187,5,100,0,0,187,197,5,52,0,0,188,189,5,114,0,0,189,197,5,49,0,0,190,191,
	5,114,0,0,191,197,5,50,0,0,192,193,5,114,0,0,193,197,5,51,0,0,194,195,5,
	114,0,0,195,197,5,52,0,0,196,180,1,0,0,0,196,182,1,0,0,0,196,184,1,0,0,
	0,196,186,1,0,0,0,196,188,1,0,0,0,196,190,1,0,0,0,196,192,1,0,0,0,196,194,
	1,0,0,0,197,22,1,0,0,0,198,199,5,65,0,0,199,200,5,116,0,0,200,201,5,116,
	0,0,201,202,5,101,0,0,202,203,5,110,0,0,203,204,5,117,0,0,204,205,5,97,
	0,0,205,206,5,116,0,0,206,207,5,105,0,0,207,208,5,111,0,0,208,436,5,110,
	0,0,209,210,5,66,0,0,210,211,5,97,0,0,211,212,5,110,0,0,212,213,5,100,0,
	0,213,214,5,119,0,0,214,215,5,105,0,0,215,216,5,100,0,0,216,217,5,116,0,
	0,217,436,5,104,0,0,218,219,5,66,0,0,219,220,5,111,0,0,220,221,5,111,0,
	0,221,222,5,108,0,0,222,223,5,101,0,0,223,224,5,97,0,0,224,436,5,110,0,
	0,225,226,5,67,0,0,226,227,5,97,0,0,227,228,5,112,0,0,228,229,5,97,0,0,
	229,230,5,99,0,0,230,231,5,105,0,0,231,232,5,116,0,0,232,233,5,97,0,0,233,
	234,5,110,0,0,234,235,5,99,0,0,235,436,5,101,0,0,236,237,5,67,0,0,237,238,
	5,104,0,0,238,239,5,97,0,0,239,240,5,114,0,0,240,241,5,103,0,0,241,436,
	5,101,0,0,242,243,5,67,0,0,243,244,5,111,0,0,244,245,5,110,0,0,245,246,
	5,100,0,0,246,247,5,117,0,0,247,248,5,99,0,0,248,249,5,116,0,0,249,250,
	5,97,0,0,250,251,5,110,0,0,251,252,5,99,0,0,252,436,5,101,0,0,253,254,5,
	67,0,0,254,255,5,117,0,0,255,256,5,114,0,0,256,257,5,114,0,0,257,258,5,
	101,0,0,258,259,5,110,0,0,259,436,5,116,0,0,260,261,5,68,0,0,261,262,5,
	101,0,0,262,263,5,99,0,0,263,264,5,105,0,0,264,265,5,98,0,0,265,266,5,101,
	0,0,266,436,5,108,0,0,267,268,5,68,0,0,268,269,5,101,0,0,269,270,5,103,
	0,0,270,271,5,114,0,0,271,272,5,101,0,0,272,273,5,101,0,0,273,436,5,115,
	0,0,274,275,5,68,0,0,275,276,5,111,0,0,276,277,5,117,0,0,277,278,5,98,0,
	0,278,279,5,108,0,0,279,436,5,101,0,0,280,281,5,69,0,0,281,282,5,110,0,
	0,282,283,5,101,0,0,283,284,5,114,0,0,284,285,5,103,0,0,285,436,5,121,0,
	0,286,287,5,70,0,0,287,288,5,114,0,0,288,289,5,101,0,0,289,290,5,113,0,
	0,290,291,5,117,0,0,291,292,5,101,0,0,292,293,5,110,0,0,293,294,5,99,0,
	0,294,436,5,121,0,0,295,296,5,71,0,0,296,297,5,97,0,0,297,298,5,105,0,0,
	298,436,5,110,0,0,299,300,5,73,0,0,300,301,5,110,0,0,301,302,5,100,0,0,
	302,303,5,117,0,0,303,304,5,99,0,0,304,305,5,116,0,0,305,306,5,97,0,0,306,
	307,5,110,0,0,307,308,5,99,0,0,308,436,5,101,0,0,309,310,5,76,0,0,310,311,
	5,101,0,0,311,312,5,110,0,0,312,313,5,103,0,0,313,314,5,116,0,0,314,436,
	5,104,0,0,315,316,5,76,0,0,316,317,5,111,0,0,317,318,5,110,0,0,318,436,
	5,103,0,0,319,320,5,77,0,0,320,321,5,97,0,0,321,322,5,103,0,0,322,323,5,
	110,0,0,323,324,5,101,0,0,324,325,5,116,0,0,325,326,5,105,0,0,326,327,5,
	99,0,0,327,328,5,70,0,0,328,329,5,105,0,0,329,330,5,101,0,0,330,331,5,108,
	0,0,331,332,5,100,0,0,332,333,5,83,0,0,333,334,5,116,0,0,334,335,5,114,
	0,0,335,336,5,101,0,0,336,337,5,110,0,0,337,338,5,103,0,0,338,339,5,116,
	0,0,339,436,5,104,0,0,340,341,5,77,0,0,341,342,5,97,0,0,342,343,5,103,0,
	0,343,344,5,110,0,0,344,345,5,101,0,0,345,346,5,116,0,0,346,347,5,105,0,
	0,347,348,5,99,0,0,348,349,5,70,0,0,349,350,5,108,0,0,350,351,5,117,0,0,
	351,436,5,120,0,0,352,353,5,77,0,0,353,354,5,97,0,0,354,355,5,115,0,0,355,
	436,5,115,0,0,356,357,5,80,0,0,357,358,5,104,0,0,358,359,5,97,0,0,359,360,
	5,115,0,0,360,436,5,101,0,0,361,362,5,80,0,0,362,363,5,111,0,0,363,364,
	5,119,0,0,364,365,5,101,0,0,365,436,5,114,0,0,366,367,5,80,0,0,367,368,
	5,111,0,0,368,369,5,119,0,0,369,370,5,101,0,0,370,371,5,114,0,0,371,372,
	5,76,0,0,372,373,5,101,0,0,373,374,5,118,0,0,374,375,5,101,0,0,375,436,
	5,108,0,0,376,377,5,82,0,0,377,378,5,97,0,0,378,379,5,116,0,0,379,436,5,
	101,0,0,380,381,5,82,0,0,381,382,5,97,0,0,382,383,5,116,0,0,383,384,5,105,
	0,0,384,436,5,111,0,0,385,386,5,82,0,0,386,387,5,101,0,0,387,388,5,115,
	0,0,388,389,5,105,0,0,389,390,5,115,0,0,390,391,5,116,0,0,391,392,5,97,
	0,0,392,393,5,110,0,0,393,394,5,99,0,0,394,436,5,101,0,0,395,396,5,83,0,
	0,396,397,5,116,0,0,397,398,5,114,0,0,398,399,5,105,0,0,399,400,5,110,0,
	0,400,436,5,103,0,0,401,402,5,84,0,0,402,403,5,101,0,0,403,404,5,109,0,
	0,404,405,5,112,0,0,405,406,5,101,0,0,406,407,5,114,0,0,407,408,5,97,0,
	0,408,409,5,116,0,0,409,410,5,117,0,0,410,411,5,114,0,0,411,436,5,101,0,
	0,412,413,5,84,0,0,413,414,5,105,0,0,414,415,5,109,0,0,415,436,5,101,0,
	0,416,417,5,85,0,0,417,418,5,110,0,0,418,419,5,115,0,0,419,420,5,105,0,
	0,420,421,5,103,0,0,421,422,5,110,0,0,422,423,5,101,0,0,423,424,5,100,0,
	0,424,425,5,76,0,0,425,426,5,111,0,0,426,427,5,110,0,0,427,436,5,103,0,
	0,428,429,5,86,0,0,429,430,5,111,0,0,430,431,5,108,0,0,431,432,5,116,0,
	0,432,433,5,97,0,0,433,434,5,103,0,0,434,436,5,101,0,0,435,198,1,0,0,0,
	435,209,1,0,0,0,435,218,1,0,0,0,435,225,1,0,0,0,435,236,1,0,0,0,435,242,
	1,0,0,0,435,253,1,0,0,0,435,260,1,0,0,0,435,267,1,0,0,0,435,274,1,0,0,0,
	435,280,1,0,0,0,435,286,1,0,0,0,435,295,1,0,0,0,435,299,1,0,0,0,435,309,
	1,0,0,0,435,315,1,0,0,0,435,319,1,0,0,0,435,340,1,0,0,0,435,352,1,0,0,0,
	435,356,1,0,0,0,435,361,1,0,0,0,435,366,1,0,0,0,435,376,1,0,0,0,435,380,
	1,0,0,0,435,385,1,0,0,0,435,395,1,0,0,0,435,401,1,0,0,0,435,412,1,0,0,0,
	435,416,1,0,0,0,435,428,1,0,0,0,436,24,1,0,0,0,437,438,5,80,0,0,438,439,
	5,101,0,0,439,440,5,114,0,0,440,441,5,105,0,0,441,442,5,111,0,0,442,443,
	5,100,0,0,443,26,1,0,0,0,444,445,5,83,0,0,445,446,5,112,0,0,446,447,5,101,
	0,0,447,448,5,99,0,0,448,449,5,86,0,0,449,450,5,97,0,0,450,451,5,114,0,
	0,451,452,5,115,0,0,452,28,1,0,0,0,453,454,5,84,0,0,454,455,5,105,0,0,455,
	456,5,109,0,0,456,457,5,105,0,0,457,458,5,110,0,0,458,459,5,103,0,0,459,
	460,5,83,0,0,460,461,5,101,0,0,461,462,5,116,0,0,462,463,5,115,0,0,463,
	30,1,0,0,0,464,465,5,84,0,0,465,466,5,105,0,0,466,467,5,109,0,0,467,468,
	5,105,0,0,468,469,5,110,0,0,469,470,5,103,0,0,470,471,5,83,0,0,471,472,
	5,101,0,0,472,473,5,116,0,0,473,32,1,0,0,0,474,475,5,83,0,0,475,476,5,112,
	0,0,476,477,5,101,0,0,477,478,5,99,0,0,478,479,5,105,0,0,479,480,5,102,
	0,0,480,481,5,105,0,0,481,482,5,99,0,0,482,483,5,97,0,0,483,484,5,116,0,
	0,484,485,5,105,0,0,485,486,5,111,0,0,486,487,5,110,0,0,487,488,5,83,0,
	0,488,489,5,101,0,0,489,490,5,116,0,0,490,491,5,115,0,0,491,34,1,0,0,0,
	492,493,5,83,0,0,493,494,5,112,0,0,494,495,5,101,0,0,495,496,5,99,0,0,496,
	497,5,105,0,0,497,498,5,102,0,0,498,499,5,105,0,0,499,500,5,99,0,0,500,
	501,5,97,0,0,501,502,5,116,0,0,502,503,5,105,0,0,503,504,5,111,0,0,504,
	505,5,110,0,0,505,506,5,83,0,0,506,507,5,101,0,0,507,508,5,116,0,0,508,
	36,1,0,0,0,509,510,5,80,0,0,510,511,5,111,0,0,511,512,5,114,0,0,512,513,
	5,116,0,0,513,514,5,115,0,0,514,38,1,0,0,0,515,516,5,88,0,0,516,532,5,49,
	0,0,517,518,5,88,0,0,518,532,5,50,0,0,519,520,5,88,0,0,520,532,5,51,0,0,
	521,522,5,88,0,0,522,532,5,52,0,0,523,524,5,120,0,0,524,532,5,49,0,0,525,
	526,5,120,0,0,526,532,5,50,0,0,527,528,5,120,0,0,528,532,5,51,0,0,529,530,
	5,120,0,0,530,532,5,52,0,0,531,515,1,0,0,0,531,517,1,0,0,0,531,519,1,0,
	0,0,531,521,1,0,0,0,531,523,1,0,0,0,531,525,1,0,0,0,531,527,1,0,0,0,531,
	529,1,0,0,0,532,40,1,0,0,0,533,534,5,47,0,0,534,535,5,47,0,0,535,42,1,0,
	0,0,536,537,5,123,0,0,537,44,1,0,0,0,538,539,5,125,0,0,539,46,1,0,0,0,540,
	541,5,91,0,0,541,48,1,0,0,0,542,543,5,93,0,0,543,50,1,0,0,0,544,545,5,40,
	0,0,545,52,1,0,0,0,546,547,5,41,0,0,547,54,1,0,0,0,548,549,5,59,0,0,549,
	56,1,0,0,0,550,551,5,61,0,0,551,58,1,0,0,0,552,553,5,58,0,0,553,60,1,0,
	0,0,554,555,5,43,0,0,555,62,1,0,0,0,556,557,5,45,0,0,557,64,1,0,0,0,558,
	559,5,42,0,0,559,66,1,0,0,0,560,561,5,47,0,0,561,68,1,0,0,0,562,563,5,61,
	0,0,563,564,5,62,0,0,564,70,1,0,0,0,565,566,5,44,0,0,566,72,1,0,0,0,567,
	569,7,0,0,0,568,567,1,0,0,0,569,570,1,0,0,0,570,568,1,0,0,0,570,571,1,0,
	0,0,571,572,1,0,0,0,572,573,6,36,0,0,573,74,1,0,0,0,574,578,3,41,20,0,575,
	577,8,1,0,0,576,575,1,0,0,0,577,580,1,0,0,0,578,576,1,0,0,0,578,579,1,0,
	0,0,579,586,1,0,0,0,580,578,1,0,0,0,581,583,5,13,0,0,582,581,1,0,0,0,582,
	583,1,0,0,0,583,584,1,0,0,0,584,587,5,10,0,0,585,587,5,0,0,1,586,582,1,
	0,0,0,586,585,1,0,0,0,587,588,1,0,0,0,588,589,6,37,1,0,589,76,1,0,0,0,590,
	591,5,47,0,0,591,592,5,42,0,0,592,596,1,0,0,0,593,595,9,0,0,0,594,593,1,
	0,0,0,595,598,1,0,0,0,596,597,1,0,0,0,596,594,1,0,0,0,597,599,1,0,0,0,598,
	596,1,0,0,0,599,600,5,42,0,0,600,601,5,47,0,0,601,602,1,0,0,0,602,603,6,
	38,1,0,603,78,1,0,0,0,604,608,7,2,0,0,605,607,7,3,0,0,606,605,1,0,0,0,607,
	610,1,0,0,0,608,606,1,0,0,0,608,609,1,0,0,0,609,80,1,0,0,0,610,608,1,0,
	0,0,611,613,7,4,0,0,612,611,1,0,0,0,613,614,1,0,0,0,614,612,1,0,0,0,614,
	615,1,0,0,0,615,82,1,0,0,0,616,617,3,81,40,0,617,618,5,46,0,0,618,620,3,
	81,40,0,619,621,3,85,42,0,620,619,1,0,0,0,620,621,1,0,0,0,621,632,1,0,0,
	0,622,623,5,46,0,0,623,625,3,81,40,0,624,626,3,85,42,0,625,624,1,0,0,0,
	625,626,1,0,0,0,626,632,1,0,0,0,627,629,3,81,40,0,628,630,3,85,42,0,629,
	628,1,0,0,0,629,630,1,0,0,0,630,632,1,0,0,0,631,616,1,0,0,0,631,622,1,0,
	0,0,631,627,1,0,0,0,632,84,1,0,0,0,633,635,7,5,0,0,634,636,7,6,0,0,635,
	634,1,0,0,0,635,636,1,0,0,0,636,637,1,0,0,0,637,638,3,81,40,0,638,86,1,
	0,0,0,639,641,7,7,0,0,640,639,1,0,0,0,640,641,1,0,0,0,641,645,1,0,0,0,642,
	643,5,72,0,0,643,646,5,122,0,0,644,646,7,8,0,0,645,642,1,0,0,0,645,644,
	1,0,0,0,646,88,1,0,0,0,18,0,196,435,531,570,578,582,586,596,608,614,620,
	625,629,631,635,640,645,2,6,0,0,0,1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TimingBlockLexer.__ATN) {
			TimingBlockLexer.__ATN = new ATNDeserializer().deserialize(TimingBlockLexer._serializedATN);
		}

		return TimingBlockLexer.__ATN;
	}


	static DecisionsToDFA = TimingBlockLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}