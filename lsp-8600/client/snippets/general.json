{
  "If Statement": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) {",
      "  $0",
      "}"
    ],
    "description": "If statement",
     "scope": "tim"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "for (${1:i} = 0; ${1:i} < ${2:count}; ${1:i}++) {",
      "  $0",
      "}"
    ],
    "description": "For loop"
  },
   "Flow Block": {
    "prefix": "Flow",
    "body": [
      "Flow {",
      "    Comment: \"${1:MainFlow}\";",
      "    Nodes {",
      "        TestSuite ${2:Test_1}  {   // CustomTestMethod为关联的测试方法",
      "            Calls ${3:CustomTestMethod};",
      "            Comment = \"${4:This is a test node}\";",
      "            Flags = {",
      "                ByPass = false;",
      "            };",
      "            ExecutionMode = \"Normal\";",
      "            PrimarySettings {",
      "                Timing.TimingSpecificationSet = \"${5:timingSpecificationSet_1}\";",
      "                Timing.Ports[${6:port_1}].TimingSet = \"${7:timingSet_1}\";",
      "                Level.LevelEquationSet = \"${8:levelEquationSet_1}\";",
      "                Level.LevelSet = \"${9:levelSet_1}\";",
      "                Pattern = \"${10:multiPortBurst_1}\";",
      "            }",
      "            TestMethodParameters {",
      "                DoubleParameter = \"${11:1.23}\";",
      "                IntParameter = \"${12:123}\";",
      "                BoolParameter = \"${13:true}\";",
      "                StringParameter = \"${14:This is a string}\";",
      "            };",
      "        }",
      "    }",
      "    ExecuteNodes {",
      "        Run(${15:Test_1});",
      "        RunBranch(${16:Test_2}){",
      "            ${17:Test_3};",
      "        }",
      "        else(",
      "            ${18:Test_4}",
      "        )",
      "        Concurrent1{",
      "            ${19:Flow1};",
      "            ${20:Flow2};",
      "        }",
      "        TestMethod{",
      "            ",
      "        }",
      "    }",
      "}"
    ],
    "description": "Insert a full Flow structure"
  },
  "Signal Block": {
    "prefix": "Signal",
    "body": [
      "SiteCount 1;",
      "",
      "Signal ${1:CBIT_I_CLK} {",
      "    ResType ${2:CBIT-System};",
      "    Enable ${3:true};",
      "    Site 1 {",
      "        Channel = ${4:0,24};",
      "    }",
      "}",
      "",
      "Signal ${5:CBIT_I_DDR_CLK} {",
      "    ResType: ${6:CBIT-System};",
      "    Enable: ${7:true};",
      "    Site 1 {",
      "        Channel = ${8:0,4};",
      "    }",
      "}",
      "",
      "Signal ${9:CBIT_I_ETH_REFCLK} {",
      "    ResType ${10:CBIT-System};",
      "    Enable ${11:true};",
      "    Site 1 {",
      "        Channel = ${12:0,6};",
      "    }",
      "}",
      "",
      "Signal ${13:CBIT_I_PE0_CLK0} {",
      "    ResType ${14:CBIT-System};",
      "    Enable ${15:true};",
      "    Site 1 {",
      "        Channel = ${16:0,7};",
      "    }",
      "}",
      "",
      "SignalGroups ${17:gGANG} {",
      "    ResType ${18:DPS-DPS256};",
      "    Signal ${19:VDD_DDR_0P75,VDD_ECSERDES_0P75,VDDH_SERDES_1P8,VDDIO_1_1P8,VDDIO_1_3P3};",
      "}",
      "",
      "ExecuteNodes"
    ],
    "description": "Insert signal, signal group and port definitions"
  },
  "Timings Block": {
    "prefix": "timings",
    "body": [
      "Timings {",
      "\tWaveformTables {",
      "\t\tWaveformTable DC_DDR0_wvt [x1] {",
      "\t\t\tSignal CBIT_I_CLK + CBIT_I_DDR_CLK {",
      "\t\t\t\t1: d1:U;", 
      "\t\t\t\tX: d1:Z d2:X;",
      "\t\t\t\t0: d1:D;",
      "\t\t\t\tH: d1:Z r1:H;",
      "\t\t\t\tL: d1:Z r1:L;",
      "\t\t\t\th: d1:Z r2:H;", 
      "\t\t\t\tl: d1:z r2:L;",
      "\t\t\t\tBreak: L;",
      "\t\t\t}",
      "\t\t\tSignal CBIT_I_ETH_REFCLK {",
      "\t\t\t\t0: d1:D;",
      "\t\t\t}",
      "\t\t\tSignal CBIT_I_PE0_CLK0 {",
      "\t\t\t\t0: d1:U;",
      "\t\t\t}",
      "\t\t\tSignal CBIT_I_PE0_CLK1 {",
      "\t\t\t\t1: d1:U d3:D; p: d2:U d4:D;",
      "\t\t\t}",
      "\t\t\tSignal USR_D_5V_A {",
      "\t\t\t\tL: r1:L;", 
      "\t\t\t\tH: r1:H;",
      "\t\t\t\tX: r1:X;",
      "\t\t\t\tl: r2:L;",
      "\t\t\t\th: r2:H;",
      "\t\t\t}",
      "\t\t}",
      "\t\tWaveformTable DC_DDR0_wvt_test [X4] {",
      "\t\t\tSignal O_TDO {",
      "\t\t\t\tL: r1:L;", 
      "\t\t\t\tH: r1:H;",
      "\t\t\t\tX: r1:X;",
      "\t\t\t\tl: r2:L;",
      "\t\t\t\th: r2:H;",
      "\t\t\t\tBreak:LLLL;",  
      "\t\t\t\tUsed {", 
      "\t\t\t\t\tL H L H;",
      "\t\t\t\t\tL l H H;",
      "\t\t\t\t\tH H L L;",
      "\t\t\t\t\t[L H X] [L H X] [L H X] [L H X];",
      "\t\t\t\t}",
      "\t\t\t\tUnused {", 
      "\t\t\t\t\tLHLH;",
      "\t\t\t\t\tLlHH;",
      "\t\t\t\t\tHHLL;",
      "\t\t\t\t\t//[L H X] [L H X] [L H X] [L H X];",
      "\t\t\t\t}",
      "\t\t\t\tMap {",
      "\t\t\t\t\tX [L H] X [L H] => X X X X;",
      "\t\t\t\t\tX [l h] X [l h] => X X X X;",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\tEquationSets {",
      "\t\tEquationSet DC_DDR0_eqn {",
      "\t\t\tSpecVars {",
      "\t\t\t\tDouble Tcoef;",
      "\t\t\t\tTime Roff;",
      "\t\t\t\tTime per_125;",
      "\t\t\t}",
      "\t\t\tTimingSets {",
      "\t\t\t\tTimingSet gen_tp1 [(per_125)*Tcoef] {",
      "\t\t\t\t\tSignal CBIT_I_CLK + CBIT_I_DDR_CLK{",
      "\t\t\t\t\t\td1 = ((0/125) * per_125) * Tcoef;",
      "\t\t\t\t\t\tr1 = ((100/125) * per_125) * Tcoef + Roff;",
      "\t\t\t\t\t\tr2 = ((106/125) * per_125) * Tcoef + Roff;",
      "\t\t\t\t\t}",
      "\t\t\t\t\tSignal CBIT_I_ETH_REFCLK + CBIT_I_PE0_CLK1{",
      "\t\t\t\t\t\td1 = ((30 / 125) * per_125) * Tcoef;",
      "\t\t\t\t\t\td2 = ((31 / 125) * per_125) * Tcoef;",
      "\t\t\t\t\t\td3 = ((90 / 125) * per_125) * Tcoef;",
      "\t\t\t\t\t\td4 = ((93 / 125) * per_125) * Tcoef;",
      "\t\t\t\t\t}",
      "\t\t\t\t\tSignal CBIT_I_PE0_CLK0 {",
      "\t\t\t\t\t\td1 = ((0/125)*per_125)*Tcoef;",
      "\t\t\t\t\t}",
      "\t\t\t\t\tSignal USR_D_5V_A {",
      "\t\t\t\t\t\tr1 = ((100/125)*per_125)*Tcoef + Roff;",
      "\t\t\t\t\t\tr2 = ((106/125)*per_125)*Tcoef + Roff;",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t\tTimingSet gen_tp2 [(per_125)*Tcoef] {",
      "\t\t\t\t\tSignal CBIT_I_PE0_CLK0 {",
      "\t\t\t\t\t\td1 = ((0/125)*per_125)*Tcoef;",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t}",
      "\t\tEquationSet DC_DDR0_CLK_eqn {",
      "\t\t\tSpecVars{",
      "\t\t\t\tDouble Tcoef;",
      "\t\t\t\tTime Roff;",
      "\t\t\t\tTime per_125;",
      "\t\t\t}",
      "\t\t\tTimingSets {",
      "\t\t\t\tTimingSet gen_tp1 [(per_125)*Tcoef] {",
      "\t\t\t\t\tSignal CBIT_I_CLK + CBIT_I_DDR_CLK{",
      "\t\t\t\t\t\td1 = ((0/125)*per_125)*Tcoef;",
      "\t\t\t\t\t\tr1 = ((100/125)*per_125)*Tcoef + Roff;",
      "\t\t\t\t\t\tr2 = ((106/125)*per_125)*Tcoef + Roff;",
      "\t\t\t\t\t}",
      "\t\t\t\t\tSignal CBIT_I_ETH_REFCLK + CBIT_I_PE0_CLK1 {",
      "\t\t\t\t\t\td1 = ((30/125)*per_125)*Tcoef;",
      "\t\t\t\t\t\td2 = ((31/125)*per_125)*Tcoef;",
      "\t\t\t\t\t\td3 = ((90/125)*per_125)*Tcoef;",
      "\t\t\t\t\t\td4 = ((93/125)*per_125)*Tcoef;",
      "\t\t\t\t\t}",
      "\t\t\t\t\tSignal CBIT_I_PE0_CLK0 {",
      "\t\t\t\t\t\td1 = ((0/125)*per_125)*Tcoef;",
      "\t\t\t\t\t}",
      "\t\t\t\t\tSignal USR_D_5V_A {",
      "\t\t\t\t\t\tr1 = ((100/125)*per_125)*Tcoef + Roff;",
      "\t\t\t\t\t\tr2 = ((106/125)*per_125)*Tcoef + Roff;",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t\tTimingSet gen_tp2 [(per_125)*Tcoef] {",
      "\t\t\t\t\tSignal CBIT_I_PE0_CLK0{",
      "\t\t\t\t\t\td1 =((0/125)*per_125)*Tcoef;",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\tSpecificationSets {",
      "\t\tSpecificationSet DC_DDR0_spec {",
      "\t\t\tSpecVars {",
      "\t\t\t\tTcoef = 1;",
      "\t\t\t\tRoff = 0 ns;",
      "\t\t\t\tper_125 = 125 ns;",
      "\t\t\t}",
      "\t\t\tPorts [pDDR0,pDDR_clk,pDDR2,pDDR3,pDDR4] {",		
      "\t\t\t\tSpecVars pDDR_clk [DC_DDR0_wvt] [DC_DDR0_clk_eqn] {}",
      "\t\t\t\tSpecVars pDDR0 [DC_DDR0_wvt] [DC_DDR0_eqn] {",
      "\t\t\t\t\tper_125 = 120 ns;",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t}",
      "\t\tSpecificationSet DC_DDR0_spec_test {",
      "\t\t\tSpecVars {",
      "\t\t\t\tTcoef = 1;",
      "\t\t\t\tRoff = 0 ns;",
      "\t\t\t}",
      "\t\t\tPorts [pDDR0,pDDR_clk] {",
      "\t\t\t\tSpecVars pDDR0 [DC_DDR0_wvt] [DC_DDR0_eqn] {",
      "\t\t\t\t\tper_125 = 125 ns;",
      "\t\t\t\t}",
      "\t\t\t\tSpecVars pDDR_clk [DC_DDR0_wvt] [DC_DDR0_eqn] {",
      "\t\t\t\t\tper_125 = 125 ns;",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t}",
      "\t\tSpecificationSet SinglePort_spec {",
      "\t\t\tSpecVars {",
      "\t\t\t\tTcoef = 1;",
      "\t\t\t\tRoff = 0 ns;",
      "\t\t\t}",
      "\t\t\tPorts [/@] {",
      "\t\t\t\tSpecVars @ [DC_DDR0_wvt] [DC_DDR0_eqn] {",
      "\t\t\t\t\tper_125 = 125 ns;",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "}"
    ],
    "description": "Insert complete Timings block"
  }


} 